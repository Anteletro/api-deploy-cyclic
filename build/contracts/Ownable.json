{
  "contractName": "Ownable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\",\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"An event which is triggered when the owner is changed.\",\"params\":{\"newOwner\":\"The address of the new owner.\",\"previousOwner\":\"The address of the previous owner.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"stateVariables\":{\"NOT_CURRENT_OWNER\":{\"details\":\"Error constants.\"},\"owner\":{\"details\":\"Current owner address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x908240d3963f350dadc785d79f11471753f0fb6c75892a2678a397c295874336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f458d0715dce36e97e7fb507429db7c2b98d611c9c90b46111eadd12e5a06df7\",\"dweb:/ipfs/QmdeQ3Apwx9DwEYzxGj5iUmiUTv87PG12GUmqbbQGs1fYu\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600e575f80fd5b505f80546001600160a01b031916331790556102758061002d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063860d248a1461004e5780638da5cb5b14610089578063f2fde38b146100b3578063f3fe3bc3146100c8575b5f80fd5b6100736040518060400160405280600681526020016518189c18181960d11b81525081565b60405161008091906101dd565b60405180910390f35b5f5461009b906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6100c66100c1366004610212565b6100ed565b005b6100736040518060400160405280600681526020016530313830303160d01b81525081565b5f5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b0316331461013e5760405162461bcd60e51b815260040161013591906101dd565b60405180910390fd5b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b0382166101835760405162461bcd60e51b815260040161013591906101dd565b505f80546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215610222575f80fd5b81356001600160a01b0381168114610238575f80fd5b939250505056fea26469706673582212202f36c9cfc089d75ac7f8756ca9a65ee6b06ac5631a70be3f70d76c793701f3aa64736f6c63430008190033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063860d248a1461004e5780638da5cb5b14610089578063f2fde38b146100b3578063f3fe3bc3146100c8575b5f80fd5b6100736040518060400160405280600681526020016518189c18181960d11b81525081565b60405161008091906101dd565b60405180910390f35b5f5461009b906001600160a01b031681565b6040516001600160a01b039091168152602001610080565b6100c66100c1366004610212565b6100ed565b005b6100736040518060400160405280600681526020016530313830303160d01b81525081565b5f5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b0316331461013e5760405162461bcd60e51b815260040161013591906101dd565b60405180910390fd5b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b0382166101835760405162461bcd60e51b815260040161013591906101dd565b505f80546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215610222575f80fd5b81356001600160a01b0381168114610238575f80fd5b939250505056fea26469706673582212202f36c9cfc089d75ac7f8756ca9a65ee6b06ac5631a70be3f70d76c793701f3aa64736f6c63430008190033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:933:10",
        "nodeType": "YulBlock",
        "src": "0:933:10",
        "statements": [
          {
            "nativeSrc": "6:3:10",
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "135:297:10",
              "nodeType": "YulBlock",
              "src": "135:297:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "152:9:10",
                        "nodeType": "YulIdentifier",
                        "src": "152:9:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "163:2:10",
                        "nodeType": "YulLiteral",
                        "src": "163:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "145:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "145:6:10"
                    },
                    "nativeSrc": "145:21:10",
                    "nodeType": "YulFunctionCall",
                    "src": "145:21:10"
                  },
                  "nativeSrc": "145:21:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "145:21:10"
                },
                {
                  "nativeSrc": "175:27:10",
                  "nodeType": "YulVariableDeclaration",
                  "src": "175:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nativeSrc": "195:6:10",
                        "nodeType": "YulIdentifier",
                        "src": "195:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nativeSrc": "189:5:10",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:10"
                    },
                    "nativeSrc": "189:13:10",
                    "nodeType": "YulFunctionCall",
                    "src": "189:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nativeSrc": "179:6:10",
                      "nodeType": "YulTypedName",
                      "src": "179:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "222:9:10",
                            "nodeType": "YulIdentifier",
                            "src": "222:9:10"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "233:2:10",
                            "nodeType": "YulLiteral",
                            "src": "233:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "218:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "218:3:10"
                        },
                        "nativeSrc": "218:18:10",
                        "nodeType": "YulFunctionCall",
                        "src": "218:18:10"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "238:6:10",
                        "nodeType": "YulIdentifier",
                        "src": "238:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "211:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "211:6:10"
                    },
                    "nativeSrc": "211:34:10",
                    "nodeType": "YulFunctionCall",
                    "src": "211:34:10"
                  },
                  "nativeSrc": "211:34:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "211:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "264:9:10",
                            "nodeType": "YulIdentifier",
                            "src": "264:9:10"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "275:2:10",
                            "nodeType": "YulLiteral",
                            "src": "275:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "260:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "260:3:10"
                        },
                        "nativeSrc": "260:18:10",
                        "nodeType": "YulFunctionCall",
                        "src": "260:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "284:6:10",
                            "nodeType": "YulIdentifier",
                            "src": "284:6:10"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "292:2:10",
                            "nodeType": "YulLiteral",
                            "src": "292:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "280:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "280:3:10"
                        },
                        "nativeSrc": "280:15:10",
                        "nodeType": "YulFunctionCall",
                        "src": "280:15:10"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "297:6:10",
                        "nodeType": "YulIdentifier",
                        "src": "297:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mcopy",
                      "nativeSrc": "254:5:10",
                      "nodeType": "YulIdentifier",
                      "src": "254:5:10"
                    },
                    "nativeSrc": "254:50:10",
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:10"
                  },
                  "nativeSrc": "254:50:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "254:50:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "328:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "328:9:10"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "339:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "339:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "324:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "324:3:10"
                            },
                            "nativeSrc": "324:22:10",
                            "nodeType": "YulFunctionCall",
                            "src": "324:22:10"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "348:2:10",
                            "nodeType": "YulLiteral",
                            "src": "348:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "320:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "320:3:10"
                        },
                        "nativeSrc": "320:31:10",
                        "nodeType": "YulFunctionCall",
                        "src": "320:31:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "353:1:10",
                        "nodeType": "YulLiteral",
                        "src": "353:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "313:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "313:6:10"
                    },
                    "nativeSrc": "313:42:10",
                    "nodeType": "YulFunctionCall",
                    "src": "313:42:10"
                  },
                  "nativeSrc": "313:42:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "313:42:10"
                },
                {
                  "nativeSrc": "364:62:10",
                  "nodeType": "YulAssignment",
                  "src": "364:62:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "380:9:10",
                            "nodeType": "YulIdentifier",
                            "src": "380:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "399:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "407:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "407:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "395:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "395:3:10"
                                },
                                "nativeSrc": "395:15:10",
                                "nodeType": "YulFunctionCall",
                                "src": "395:15:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "416:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "416:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "412:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "412:3:10"
                                },
                                "nativeSrc": "412:7:10",
                                "nodeType": "YulFunctionCall",
                                "src": "412:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "391:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:10"
                            },
                            "nativeSrc": "391:29:10",
                            "nodeType": "YulFunctionCall",
                            "src": "391:29:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "376:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:10"
                        },
                        "nativeSrc": "376:45:10",
                        "nodeType": "YulFunctionCall",
                        "src": "376:45:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "423:2:10",
                        "nodeType": "YulLiteral",
                        "src": "423:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "372:3:10",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:10"
                    },
                    "nativeSrc": "372:54:10",
                    "nodeType": "YulFunctionCall",
                    "src": "372:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "364:4:10",
                      "nodeType": "YulIdentifier",
                      "src": "364:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "14:418:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "104:9:10",
                "nodeType": "YulTypedName",
                "src": "104:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "115:6:10",
                "nodeType": "YulTypedName",
                "src": "115:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "126:4:10",
                "nodeType": "YulTypedName",
                "src": "126:4:10",
                "type": ""
              }
            ],
            "src": "14:418:10"
          },
          {
            "body": {
              "nativeSrc": "538:102:10",
              "nodeType": "YulBlock",
              "src": "538:102:10",
              "statements": [
                {
                  "nativeSrc": "548:26:10",
                  "nodeType": "YulAssignment",
                  "src": "548:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "560:9:10",
                        "nodeType": "YulIdentifier",
                        "src": "560:9:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "571:2:10",
                        "nodeType": "YulLiteral",
                        "src": "571:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "556:3:10",
                      "nodeType": "YulIdentifier",
                      "src": "556:3:10"
                    },
                    "nativeSrc": "556:18:10",
                    "nodeType": "YulFunctionCall",
                    "src": "556:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "548:4:10",
                      "nodeType": "YulIdentifier",
                      "src": "548:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "590:9:10",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "605:6:10",
                            "nodeType": "YulIdentifier",
                            "src": "605:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "621:3:10",
                                    "nodeType": "YulLiteral",
                                    "src": "621:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "626:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "626:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "617:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:3:10"
                                },
                                "nativeSrc": "617:11:10",
                                "nodeType": "YulFunctionCall",
                                "src": "617:11:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "630:1:10",
                                "nodeType": "YulLiteral",
                                "src": "630:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nativeSrc": "613:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "613:3:10"
                            },
                            "nativeSrc": "613:19:10",
                            "nodeType": "YulFunctionCall",
                            "src": "613:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "601:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "601:3:10"
                        },
                        "nativeSrc": "601:32:10",
                        "nodeType": "YulFunctionCall",
                        "src": "601:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "583:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "583:6:10"
                    },
                    "nativeSrc": "583:51:10",
                    "nodeType": "YulFunctionCall",
                    "src": "583:51:10"
                  },
                  "nativeSrc": "583:51:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "583:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nativeSrc": "437:203:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "507:9:10",
                "nodeType": "YulTypedName",
                "src": "507:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "518:6:10",
                "nodeType": "YulTypedName",
                "src": "518:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "529:4:10",
                "nodeType": "YulTypedName",
                "src": "529:4:10",
                "type": ""
              }
            ],
            "src": "437:203:10"
          },
          {
            "body": {
              "nativeSrc": "715:216:10",
              "nodeType": "YulBlock",
              "src": "715:216:10",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "761:16:10",
                    "nodeType": "YulBlock",
                    "src": "761:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "770:1:10",
                              "nodeType": "YulLiteral",
                              "src": "770:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "773:1:10",
                              "nodeType": "YulLiteral",
                              "src": "773:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "763:6:10",
                            "nodeType": "YulIdentifier",
                            "src": "763:6:10"
                          },
                          "nativeSrc": "763:12:10",
                          "nodeType": "YulFunctionCall",
                          "src": "763:12:10"
                        },
                        "nativeSrc": "763:12:10",
                        "nodeType": "YulExpressionStatement",
                        "src": "763:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "736:7:10",
                            "nodeType": "YulIdentifier",
                            "src": "736:7:10"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "745:9:10",
                            "nodeType": "YulIdentifier",
                            "src": "745:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "732:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "732:3:10"
                        },
                        "nativeSrc": "732:23:10",
                        "nodeType": "YulFunctionCall",
                        "src": "732:23:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "757:2:10",
                        "nodeType": "YulLiteral",
                        "src": "757:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "728:3:10",
                      "nodeType": "YulIdentifier",
                      "src": "728:3:10"
                    },
                    "nativeSrc": "728:32:10",
                    "nodeType": "YulFunctionCall",
                    "src": "728:32:10"
                  },
                  "nativeSrc": "725:52:10",
                  "nodeType": "YulIf",
                  "src": "725:52:10"
                },
                {
                  "nativeSrc": "786:36:10",
                  "nodeType": "YulVariableDeclaration",
                  "src": "786:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "812:9:10",
                        "nodeType": "YulIdentifier",
                        "src": "812:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "799:12:10",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:10"
                    },
                    "nativeSrc": "799:23:10",
                    "nodeType": "YulFunctionCall",
                    "src": "799:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "790:5:10",
                      "nodeType": "YulTypedName",
                      "src": "790:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "885:16:10",
                    "nodeType": "YulBlock",
                    "src": "885:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "894:1:10",
                              "nodeType": "YulLiteral",
                              "src": "894:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "897:1:10",
                              "nodeType": "YulLiteral",
                              "src": "897:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "887:6:10",
                            "nodeType": "YulIdentifier",
                            "src": "887:6:10"
                          },
                          "nativeSrc": "887:12:10",
                          "nodeType": "YulFunctionCall",
                          "src": "887:12:10"
                        },
                        "nativeSrc": "887:12:10",
                        "nodeType": "YulExpressionStatement",
                        "src": "887:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "844:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "844:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "855:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "855:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "870:3:10",
                                        "nodeType": "YulLiteral",
                                        "src": "870:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "875:1:10",
                                        "nodeType": "YulLiteral",
                                        "src": "875:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "866:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "866:3:10"
                                    },
                                    "nativeSrc": "866:11:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "866:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "879:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "879:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "862:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "862:3:10"
                                },
                                "nativeSrc": "862:19:10",
                                "nodeType": "YulFunctionCall",
                                "src": "862:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "851:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "851:3:10"
                            },
                            "nativeSrc": "851:31:10",
                            "nodeType": "YulFunctionCall",
                            "src": "851:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "841:2:10",
                          "nodeType": "YulIdentifier",
                          "src": "841:2:10"
                        },
                        "nativeSrc": "841:42:10",
                        "nodeType": "YulFunctionCall",
                        "src": "841:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "834:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "834:6:10"
                    },
                    "nativeSrc": "834:50:10",
                    "nodeType": "YulFunctionCall",
                    "src": "834:50:10"
                  },
                  "nativeSrc": "831:70:10",
                  "nodeType": "YulIf",
                  "src": "831:70:10"
                },
                {
                  "nativeSrc": "910:15:10",
                  "nodeType": "YulAssignment",
                  "src": "910:15:10",
                  "value": {
                    "name": "value",
                    "nativeSrc": "920:5:10",
                    "nodeType": "YulIdentifier",
                    "src": "920:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "910:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nativeSrc": "645:286:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "681:9:10",
                "nodeType": "YulTypedName",
                "src": "681:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "692:7:10",
                "nodeType": "YulTypedName",
                "src": "692:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "704:6:10",
                "nodeType": "YulTypedName",
                "src": "704:6:10",
                "type": ""
              }
            ],
            "src": "645:286:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "357:1255:0:-:0;;;1005:45;;;;;;;;;-1:-1:-1;1027:5:0;:18;;-1:-1:-1;;;;;;1027:18:0;1035:10;1027:18;;;357:1255;;;;;;",
  "deployedSourceMap": "357:1255:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;473:65;;;;;;;;;;;;;;;-1:-1:-1;;;473:65:0;;;;;;;;;;;;:::i;:::-;;;;;;;;588:20;;;;;-1:-1:-1;;;;;588:20:0;;;;;;-1:-1:-1;;;;;601:32:10;;;583:51;;571:2;556:18;588:20:0;437:203:10;1380:229:0;;;;;;:::i;:::-;;:::i;:::-;;418:51;;;;;;;;;;;;;;;-1:-1:-1;;;418:51:0;;;;;1380:229;1181:5;;1188:17;;;;;;;;;;;;-1:-1:-1;;;1188:17:0;;;;;-1:-1:-1;;;;;1181:5:0;1167:10;:19;1159:47;;;;-1:-1:-1;;;1159:47:0;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1500:31:0::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1500:31:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;1475:23:0;::::1;1467:65;;;;-1:-1:-1::0;;;1467:65:0::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1564:5:0::1;::::0;;1543:38:::1;::::0;-1:-1:-1;;;;;1543:38:0;;::::1;::::0;1564:5;::::1;::::0;1543:38:::1;::::0;::::1;1587:5;:17:::0;;-1:-1:-1;;;;;;1587:17:0::1;-1:-1:-1::0;;;;;1587:17:0;;;::::1;::::0;;;::::1;::::0;;1380:229::o;14:418:10:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;645:286::-;704:6;757:2;745:9;736:7;732:23;728:32;725:52;;;773:1;770;763:12;725:52;799:23;;-1:-1:-1;;;;;851:31:10;;841:42;;831:70;;897:1;894;887:12;831:70;920:5;645:286;-1:-1:-1;;;645:286:10:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev The contract has an owner address, and provides basic authorization control whitch\n * simplifies the implementation of user permissions. This contract is based on the source code at:\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\n */\ncontract Ownable\n{\n\n  /**\n   * @dev Error constants.\n   */\n  string public constant NOT_CURRENT_OWNER = \"018001\";\n  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\";\n\n  /**\n   * @dev Current owner address.\n   */\n  address public owner;\n\n  /**\n   * @dev An event which is triggered when the owner is changed.\n   * @param previousOwner The address of the previous owner.\n   * @param newOwner The address of the new owner.\n   */\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  /**\n   * @dev The constructor sets the original `owner` of the contract to the sender account.\n   */\n  constructor()\n  {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner()\n  {\n    require(msg.sender == owner, NOT_CURRENT_OWNER);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(\n    address _newOwner\n  )\n    public\n    onlyOwner\n  {\n    require(_newOwner != address(0), CANNOT_TRANSFER_TO_ZERO_ADDRESS);\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n\n}\n",
  "sourcePath": "@0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol",
  "ast": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/ownership/ownable.sol",
    "exportedSymbols": {
      "Ownable": [
        71
      ]
    },
    "id": 72,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "57:299:0",
          "text": " @dev The contract has an owner address, and provides basic authorization control whitch\n simplifies the implementation of user permissions. This contract is based on the source code at:\n https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol"
        },
        "fullyImplemented": true,
        "id": 71,
        "linearizedBaseContracts": [
          71
        ],
        "name": "Ownable",
        "nameLocation": "366:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "379:36:0",
              "text": " @dev Error constants."
            },
            "functionSelector": "f3fe3bc3",
            "id": 6,
            "mutability": "constant",
            "name": "NOT_CURRENT_OWNER",
            "nameLocation": "441:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "418:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "418:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303031",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "461:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bd0bb0ffcede826a2f9c8e6df6999546ede560374c0eac292714390c5fb3897d",
                "typeString": "literal_string \"018001\""
              },
              "value": "018001"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "860d248a",
            "id": 9,
            "mutability": "constant",
            "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
            "nameLocation": "496:31:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "473:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "473:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "303138303032",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "530:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a5b29f7035b13dcadb3cd5c407a8edcad826c048054710c3b5817e694ac8cf3f",
                "typeString": "literal_string \"018002\""
              },
              "value": "018002"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10,
              "nodeType": "StructuredDocumentation",
              "src": "543:42:0",
              "text": " @dev Current owner address."
            },
            "functionSelector": "8da5cb5b",
            "id": 12,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "603:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "588:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "613:186:0",
              "text": " @dev An event which is triggered when the owner is changed.\n @param previousOwner The address of the previous owner.\n @param newOwner The address of the new owner."
            },
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 19,
            "name": "OwnershipTransferred",
            "nameLocation": "808:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "850:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "834:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "885:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "869:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:69:0"
            },
            "src": "802:96:0"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "1021:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1027:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 24,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1035:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1039:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1035:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1027:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:18:0"
                }
              ]
            },
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "902:100:0",
              "text": " @dev The constructor sets the original `owner` of the contract to the sender account."
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:0:0"
            },
            "scope": 71,
            "src": "1005:45:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1153:65:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1171:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1167:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1181:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1167:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 37,
                        "name": "NOT_CURRENT_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1188:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1159:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:47:0"
                },
                {
                  "id": 40,
                  "nodeType": "PlaceholderStatement",
                  "src": "1212:1:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1054:73:0",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 42,
            "name": "onlyOwner",
            "nameLocation": "1139:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:2:0"
            },
            "src": "1130:88:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1461:148:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1475:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1496:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1488:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1488:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1488:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1475:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 57,
                        "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1500:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1467:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:65:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1564:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1571:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1543:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "EmitStatement",
                  "src": "1538:43:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1587:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1595:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1587:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:17:0"
                }
              ]
            },
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "1222:155:0",
              "text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param _newOwner The address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1449:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "1449:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1449:9:0"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1389:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1420:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1412:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:27:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:0"
            },
            "scope": 71,
            "src": "1380:229:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 72,
        "src": "357:1255:0",
        "usedErrors": [],
        "usedEvents": [
          19
        ]
      }
    ],
    "src": "32:1581:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.25+commit.b61c2a91.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-03-22T03:50:14.549Z",
  "devdoc": {
    "details": "The contract has an owner address, and provides basic authorization control whitch simplifies the implementation of user permissions. This contract is based on the source code at: https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol",
    "events": {
      "OwnershipTransferred(address,address)": {
        "details": "An event which is triggered when the owner is changed.",
        "params": {
          "newOwner": "The address of the new owner.",
          "previousOwner": "The address of the previous owner."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "The constructor sets the original `owner` of the contract to the sender account."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "stateVariables": {
      "NOT_CURRENT_OWNER": {
        "details": "Error constants."
      },
      "owner": {
        "details": "Current owner address."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}